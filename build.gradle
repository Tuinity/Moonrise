import me.modmuss50.mpp.ReleaseType

plugins {
    id("java-library")
    id("net.neoforged.moddev")
    id("me.modmuss50.mod-publish-plugin") version "0.7.2" apply false
}

/*
 * Gets the version name from the latest Git tag
 */
// https://stackoverflow.com/questions/28498688/gradle-script-to-autoversion-and-include-the-commit-hash-in-android
def getGitCommit = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

Aw2AtTask.configureDefault(
    getProject(),
    layout.projectDirectory.file("src/main/resources/moonrise.accesswidener").getAsFile(),
    sourceSets.main
)

neoForge {
    neoFormVersion = "1.21.1-20240808.144430"
    validateAccessTransformers = true
}

tasks.named("createMinecraftArtifacts") {
    dependsOn("copyAt")
}

dependencies {
    // todo: check versions
    compileOnly "net.fabricmc:sponge-mixin:0.13.4+mixin.0.8.5"
    compileOnly "io.github.llamalad7:mixinextras-common:0.4.1"

    api("ca.spottedleaf:concurrentutil:${rootProject.concurrentutil_version}")
    api("org.yaml:snakeyaml:${rootProject.snakeyaml_version}")

    // todo: does cloth publish a platform-agnostic jar in mojang mappings?
    compileOnly "me.shedaniel.cloth:cloth-config-neoforge:${rootProject.cloth_version}"
}

allprojects {
    group = rootProject.maven_group
    version = rootProject.mod_version + "+" + getGitCommit()

    plugins.apply("java-library")

    java {
        withSourcesJar()

        toolchain {
            languageVersion = JavaLanguageVersion.of(21)
        }
    }

    repositories {
        mavenLocal {
            mavenContent {
                includeModule("ca.spottedleaf", "concurrentutil")
            }
        }
        maven {
            url "https://api.modrinth.com/maven"
            mavenContent {
                includeGroup("maven.modrinth")
            }
        }
        maven { url "https://maven.shedaniel.me/" }
        maven { url "https://maven.terraformersmc.com/releases/" }
    }

    // make build reproducible
    tasks.withType(AbstractArchiveTask).configureEach {
        preserveFileTimestamps = false
        reproducibleFileOrder = true
    }

    tasks.withType(JavaCompile).configureEach {
        it.options.release = 21
    }

    tasks.jar.configure {
        from(rootProject.file("LICENSE")) {
            rename { "${it}_${rootProject.base.archivesName.get()}"}
        }
    }
}

subprojects {
    plugins.apply("me.modmuss50.mod-publish-plugin")

    publishMods {
        if (project.version.contains("-beta.")) {
            type = ReleaseType.BETA
        } else {
            type = ReleaseType.STABLE
        }
        changelog = providers.environmentVariable("RELEASE_NOTES")

        List<String> supportedMcVersions = rootProject.supported_minecraft_versions.split(',')

        modrinth {
            projectId = "KOHu7RCS"
            accessToken = providers.environmentVariable("MODRINTH_TOKEN")
            minecraftVersions = supportedMcVersions
        }

        curseforge {
            projectId = "1096335"
            accessToken = providers.environmentVariable("CURSEFORGE_TOKEN")
            minecraftVersions = supportedMcVersions
        }
    }
}
